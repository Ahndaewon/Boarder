<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="BoarderDao"><!-- 인터페이스 이름 적어줌 -->
  
  
  <resultMap type="ArticleVO" id="ArticleVOMap">
  	<id column="A_ID" property="id"/>
  	<result column="MEMBER_ID" property="memberId"/>
  	<result column="TITLE" property="title"/>
  	<result column="WRITE_DATE" property="writeDate"/>
  	<result column="VIEW_COUNT" property="viewCount"/>
  	<result column="RECOMMEND_COUNT" property="recommendCount"/>
  	<result column="IP_ID" property="ipId"/>
  	<result column="BODY" property="body"/>
  	<result column="FILENAME" property="fileName"/>
  	
  	<association property="memberVO" javaType="MemberVO">
  		<id column="ID" property="id"/>
  		<result column="PASSWORD" property="password"/>
  		<result column="NAME" property="name"/>
  		<result column="NICKNAME" property="nickname"/>
  		<result column="EMAIL" property="email"/>
  		<result column="REGISTRATION_DATE" property="registrationDate"/>
  		<result column="GRADE" property="grade"/>
  		<result column="ACCESS_COUNT" property="accessCount"/>
  		<result column="SALT" property="salt"/>
  	</association>
  	
  	<association property="articleIpVO" javaType="ArticleIpVO">
  		<id column="I_ID" property="id"/>
  		<result column="ARTICLE_ID" property="articleId"/>
  		<result column="I_MEMBER_ID" property="memberId"/>
  		<result column="REQUEST_IP" property="requestIp"/>
  	</association>
  	
  	
  	
  </resultMap>
  
  
	<insert id="insertArticle" parameterType="ArticleVO">
	
		INSERT INTO ARTICLE (
			ID
			, MEMBER_ID
			, TITLE
			, WRITE_DATE
			, VIEW_COUNT
			, RECOMMEND_COUNT
			, IP_ID
			, BODY
			, FILENAME
		)
		
		VALUES (
			#{id}
			, #{memberId}	
			, #{title}	
			, SYSDATE		
			, 0		
			, 0		
			, #{ipId}		
			, #{body}
			, #{fileName}
		)
	
	
	</insert>
  	
  	
  	<select id="selectAll" resultMap="ArticleVOMap" parameterType="Pager">
  	
	   SELECT *
	   FROM (
	   
	        SELECT ROWNUM RNUM, C.*
	        FROM (
	                SELECT	A.ID 				A_ID
	                        , MEMBER_ID 		
	                        , TITLE
	                        , BODY
	                        , CASE 
        					WHEN TO_CHAR(SYSDATE,'yyyymmdd') - TO_CHAR((WRITE_DATE),'yyyymmdd') = 0 
        					THEN   TO_CHAR(WRITE_DATE,'hh24:ss')<!-- 당일글 -->
       					    WHEN TO_CHAR(SYSDATE,'yyyymmdd') - TO_CHAR((WRITE_DATE),'yyyymmdd') >= 10000 
       					    THEN   TO_CHAR(WRITE_DATE,'YY-MM-DD')<!-- 일년전 -->
        					ELSE TO_CHAR(WRITE_DATE,'MM-DD')
        					END as WRITE_DATE		
	                        , VIEW_COUNT		
	                        , RECOMMEND_COUNT	
	                        , IP_ID		
	                        , FILENAME 
	                        , M.NICKNAME
	                FROM	ARTICLE A, MEMBER M
	                WHERE	A.MEMBER_ID = M.ID(+)
	                ORDER	BY A.ID	DESC
	                ) C
	        WHERE   ROWNUM <![CDATA[<=]]> #{endRow}     
	        ) 
	    WHERE    RNUM >= #{startRow} 
  		
  	</select>
  	
  	
  	<select id="selectViewPage" parameterType="_int" resultMap="ArticleVOMap">
  	
  		SELECT	A.ID 				A_ID
  				, A.MEMBER_ID 		
  				, TITLE
  				, BODY
  				, CASE 
        		WHEN TO_CHAR(SYSDATE,'yyyymmdd') - TO_CHAR((WRITE_DATE),'yyyymmdd') = 0 
        		THEN   TO_CHAR(WRITE_DATE,'hh24:ss')<!-- 당일글 -->
       			WHEN TO_CHAR(SYSDATE,'yyyymmdd') - TO_CHAR((WRITE_DATE),'yyyymmdd') >= 10000 
       			THEN   TO_CHAR(WRITE_DATE,'YY-MM-DD')<!-- 일년전 -->
        		ELSE TO_CHAR(WRITE_DATE,'MM-DD')
        		END as WRITE_DATE	
  				, VIEW_COUNT		
  				, RECOMMEND_COUNT	
  				, REQUEST_IP
  				, FILENAME 
  				, M.NICKNAME
  		FROM	ARTICLE A, MEMBER M, AIP I
  		WHERE	A.MEMBER_ID = M.ID(+)
  		AND		I.ARTICLE_ID = A.ID
  		AND		A.ID = #{id}
  	
  	</select>
  	
  	<select id="selectAllcount" resultType="_int">
  	
  	
  		SELECT	COUNT(A.ID)
  		FROM	ARTICLE A, MEMBER M 
  		WHERE	A.MEMBER_ID = M.ID(+)
  	
  	</select>

	<delete id="removeArticle" parameterType="_int">
		
		DELETE
  		FROM	ARTICLE 
  		WHERE	ID = #{id}
  		
	</delete>
	
	<delete id="removeAtricleIp" parameterType="_int">
		DELETE
		FROM	AIP
		WHERE	ARTICLE_ID = #{id}
		
		
	</delete>
	
	
	<update id="increamentViewCount" parameterType="_int">
		UPDATE	ARTICLE
		SET		VIEW_COUNT = VIEW_COUNT + 1
		WHERE	ID = #{id}
	</update>

	<select id="selectCategory1" resultMap="ArticleVOMap">
		
		  SELECT ROWNUM RNUM, C.*
	        FROM (
	                SELECT	A.ID 				A_ID
	                        , MEMBER_ID 		
	                        , TITLE
	                        , BODY
	                        , TO_CHAR(WRITE_DATE, 'YY.MM.DD HH24:MI') WRITE_DATE	
	                        , VIEW_COUNT		
	                        , RECOMMEND_COUNT	
	                        , IP_ID		
	                        , FILENAME 
	                        , M.NICKNAME
	                FROM	ARTICLE A, MEMBER M
	                WHERE	A.MEMBER_ID = M.ID(+)
	                ORDER	BY A.ID	DESC
	                ) C
	        WHERE   ROWNUM <![CDATA[<=]]> 6
	
	</select>
	
	<update id="updateArticle" parameterType="ArticleVO">
		UPDATE	ARTICLE
		SET		
				FILENAME = #{fileName}
				,RECOMMEND_COUNT = #{recommendCount}
			<if test="title != null and title != '' ">
				,TITLE = #{title}
			</if>
			<if test="body != null and body != '' ">
				,body = #{body}
			</if>
		WHERE	ID = #{id}
	</update>
	
	<update id="updateArticleIp" parameterType="ArticleIpVO">
		UPDATE 	ARTICLE
		SET		REQUEST_IP = #{requestIp}
		WHERE	ARTICLE_ID = #{articleId}
	</update>

  
  
  	<insert id="insertIp"  parameterType="articleIpVO">
  		INSERT INTO	AIP (
  				ID
  				<if test="articleId != null and articleId != '' ">
  				,ARTICLE_ID
  				</if>
  				<if test="memberId != null and memberId != '' ">
  				,MEMBER_ID
  				</if>
  				,VIEW_DATE 
  				,REQUEST_IP
  				,OWNER
  				
  		)
  		VALUES (
  				#{id}
  				<if test="articleId != null and articleId != '' ">
  				,#{articleId}
  				</if>
  				<if test="memberId != null and memberId != '' ">
  				,#{memberId}
  				</if>
  				,SYSDATE 
  				,#{requestIp}
  				,#{owner}
  		)
  	
  	</insert>
  	
  	<select id="selectGetIpId" resultType="_int">
  	
  		SELECT	ARTICLE_IP_SEQ.NEXTVAL
  		FROM	DUAL 
  	
  	</select>
  	
  	<select id="selectGetArticleId" resultType="_int">
  	
  		SELECT	ARTICLE_SEQ.NEXTVAL
  		FROM	DUAL 
  	
  	</select>
  	
  	
  	<select id="selectViewIp" parameterType="map" resultType="ArticleIpVO">
  		SELECT	ID
  				,ARTICLE_ID 	articleId
  				,MEMBER_ID		memberId
  				,REQUEST_IP		requestIp
  				,VIEW_DATE		viewDate
  		FROM	AIP
  		WHERE	MEMBER_ID = #{memberId}
  		AND		ARTICLE_ID = #{articleId}
  	</select>
  		
  		
  	<select id="insertLike" parameterType="ArticleLikeVO" resultType="_int">
  		
  		INSERT INTO ALIKE (
  				ID
  				,ARTICLE_ID
  				,MEMBER_ID
  		)
  		VALUES (
  				ARTICLE_LIKE_SEQ.NEXTVAL
  				,#{articleId}
  				,#{memberId}
  		)
  		
  	</select>
  	
  	<select id="likeCount" parameterType="_int" resultType="_int">
  		SELECT COUNT(*)
  		FROM	ALIKE
  		WHERE	ARTICLE_ID = #{id}
  		
  	</select>	
  	
  	<select id="selectLike" parameterType="map" resultType="_int">
  	
  		SELECT COUNT(*)
  		FROM	ALIKE
  		WHERE	ARTICLE_ID = #{articleId}
  		AND		MEMBER_ID = #{memberId}
  	
  	</select>
  	
  
  	<delete id="deleteLike" parameterType="map">
  		DELETE
  		FROM	ALIKE
  		WHERE	ARTICLE_ID = #{articleId}
  		AND		MEMBER_ID = #{memberId}
  	</delete>
  	
  	
  	<select id="selectFindId" parameterType="string" resultType="_int">
  	
  		SELECT	COUNT(ID)
  		FROM	ARTICLE
  		WHERE	EMAIL = #{email}
  	
  	</select>
  
  </mapper>
  